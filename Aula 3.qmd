---
format: html
editor: visual
message: false
warning: false
---

# 1. ggplot

Vamos utilizar o `ggplot2` para poder fazer um gráfico para análise exploratória das variáveis. Com o `geom_point` mostra os pontos dentro da mesma variável, mas estes podem estar sobrepostos, para isso utilizamos o `geom_jitter` para poder desagregar os pontos dentro e observar melhor os dados.

Pode adicionar camadas também, quando coloca (+) outro parâmetro como o ´geom_boxplot`. A ordem altera como a camada será exposta, se ela ficará acima ou abaixo. O primeiro a ser chamado ficará na camada mais abaixo a próxima ficara acima desta, a próxima que for criada ficara acima das demais e assim por diante.

Para não duplicar o outlier, podemos tirar o outlier com `outlier.colour = NA`.

Podemos utilizar temas, para atender a um jornal específico, como **g2 + theme_bw()**, o tema fica preto e branco algo mais clean e científico. Tem outros como o theme_classic.

## 1.2 Carregar conjuntos de dados
```{r}
library(gsheet) 
df4 <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit?usp=sharing") 
```

## 1.3 Construção de gráficos
```{r}
library(ggplot2)
g1 <- df4 |>
  ggplot(aes(trat, comp))+
  geom_point(color = "darkgreen", shape = 2, size = 3)
g1 + theme_classic()+
  labs(x = "Tratamento",
       y = "Comprimento",
       title = "Meu primeiro ggplot",
       caption = "Fonte: Dados diversos")

g2 <- df4 |>
  ggplot(aes(trat, comp))+
  geom_boxplot(outlier.colour = NA,
               fill = "orange")+
  geom_jitter(width = 0.05,
              color = "darkblue",
              shape = 3,
              size = 2)
g2 + theme_bw() +
  #ylim(0,20) #Ele faz a mesma coisa que o de baixo
  scale_y_continuous(limits = c(0,20),
                     n.breaks = 5) #n.breaks é o número de quebras, se colocar breaks apenas, fica só a linha correspondente aquele número.
ggsave("plot1.png", bg = "white")
```

